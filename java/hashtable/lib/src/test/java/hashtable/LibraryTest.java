/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashtable;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
//        Library classUnderTest = new Library();
//        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }
  @Test
  public void testHash() {

    HashTable hashtable = new HashTable();

    String key = "peter";

    hashtable.hash(key);

    int actual =  hashtable.hash(key);
    int expected =  4;

    System.out.println("test");

    assertEquals( expected, actual,"inserted value into middle of array");
  }


  @Test
  public void testHash2() {

    HashTable HashTable = new HashTable();

    String key = "test";

    HashTable.hash(key);

    int actual =  HashTable.hash(key);
    int expected =  8;

    System.out.println("test");

    assertEquals( expected, actual,"inserted value into middle of array");
  }

  @Test
  public void testHashTableAdd() {

    HashTable test = new HashTable();
    test.add("peter",1000);
    int actual= test.getSize();
    int expected = 1;
    System.out.println("test");

    assertEquals( expected, actual);
    assertEquals(test.get("peter"),1000);
    assertEquals(test.contains("peter"),true);
  }

  @Test
  public void testHashTableGet() {

    HashTable test = new HashTable();
    test.add("peter",1000);
    test.add("miky",2500);
    test.add("billy",1500);

    assertEquals(test.get("peter"),1000);
    assertEquals(test.get("miky"),2500);
    assertEquals(test.get("billy"),1500);
  }

  @Test
  public void testHashTableContains() {

    HashTable test = new HashTable();
    test.add("peter",1000);
    test.add("miky",2500);

    assertEquals(test.contains("peter"),true);
    assertEquals(test.contains("miky"),true);
    assertEquals(test.contains("billy"),false);
  }
  @Test
  public void testHashtableCollision() {

    HashTable test = new HashTable();
    test.add("dop",1000);
    test.add("pod",1000);

    assertEquals( test.hash("dop"), test.hash("pod"));
  }
//

}
