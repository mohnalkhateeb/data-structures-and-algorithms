/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quick.sort;

import java.util.Arrays;

public class Library {
  public static void main(String[] args)
  {
    int[] arr = { 10, 7, 8, 9, 1, 5 };
    int n = arr.length;
    int[] arr1 = new int[]{};
    System.out.println(Arrays.toString(quickSort(arr, 0, n - 1)));
    System.out.println(Arrays.toString(quickSort(arr1, 0, n - 1)));
  }
  static int partition(int[] arr, int low, int high)
  {
    int pivot = arr[high];
    int i = (low - 1);

    for(int j = low; j <= high - 1; j++)
    {
      if (arr[j] < pivot)
      {
        i++;
        swap(arr, i, j);
      }
    }
    swap(arr, i + 1, high);
    return (i + 1);
  }
  static int[] quickSort(int[] arr, int low, int high)
  {
    try
    {
      if(arr == null)
      {
        return arr;
      }
      else if(arr.length == 1)
      {
        return arr;
      }
      if (low < high)
      {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
      }
    }catch (Exception e)
    {
      arr = new int[]{e.hashCode()};
      System.out.println(e.getMessage());
    }

    return arr;
  }
  static int[] swap(int[] arr, int i, int j)
  {
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
    return arr;
  }
}
